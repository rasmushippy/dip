//Часть выполняемая насервере

//Заполнение ячейки "День недели"
&НаСервере
Функция ДеньНеделиПрописью(НомерДняНедели)
	Если НомерДняНедели=1 тогда
		Возврат "Понедельник";
	КонецЕсли;
	Если НомерДняНедели=2 тогда
		Возврат "Вторник";
	КонецЕсли;
	Если НомерДняНедели=3 тогда
		Возврат "Среда";
	КонецЕсли;
	Если НомерДняНедели=4 тогда
		Возврат "Четверг";
	КонецЕсли;
	Если НомерДняНедели=5 тогда
		Возврат "Пятница";
	КонецЕсли;
	Если НомерДняНедели=6 тогда
		Возврат "Суббота";
	КонецЕсли;
	Если НомерДняНедели=7 тогда
		Возврат "Воскресенье";
	КонецЕсли;
КонецФункции

//Размещение занятия
&НаСервере
Функция РазместитьЗанятие (Дата,НомерДняНедели,НомерПары,Выборка,Аудитория)
	Занятие = Объект.Авторасписание.Добавить();
	Занятие.Дата = Дата;
	Занятие.ДеньНедели = ДеньНеделиПрописью(НомерДняНедели);
	Занятие.НомерПары = НомерПары;
	Занятие.УчебнаяГруппа = Выборка.УчебнаяГруппа;
	Занятие.Дисциплина = Выборка.Дисциплина;
	Занятие.Преподаватель = Выборка.Преподаватель;
	Занятие.Аудитория = Аудитория;
	Возврат 1
КонецФункции
 
//Выбор аудитории
&НаСервере
Функция ВыбратьАудиторию (Аудитории,Дата,НомерПары)
	Для каждого Аудитория из Аудитории цикл
		ДоступностьАудитории = 1;
		Для каждого ТекСтрокаАудитории из Объект.Авторасписание цикл									
			Если ТекСтрокаАудитории.Аудитория=ТекСтрокаАудитории тогда
				ДоступностьАудитории = 0;
				Прервать;
			КонецЕсли;
		КонецЦикла;										
	КонецЦикла;
	Если ДоступностьАудитории = 1 тогда
		Возврат Аудитория.Аудитория;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции
 
//Проверка доступности участников занятия
&НаСервере
Функция ПроверитьДоступность (Дата,НомерПары,Группа,Преподаватель)
	Доступность = 1;
	Для каждого ТекСтрокаАвторасписание из Объект.Авторасписание цикл
		Если ТекСтрокаАвторасписание.Дата = Дата
			и ТекСтрокаАвторасписание.НомерПары = НомерПары  тогда
			Если ТекСтрокаАвторасписание.УчебнаяГруппа.Наименование = Группа
				или ТекСтрокаАвторасписание.Преподаватель = Преподаватель тогда
				Доступность = 0;
				Прервать;   								
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Доступность;
КонецФункции

//Выбор номера пары
Функция ВыбратьПару(Выборка,ДатаЗанятия,НомерДняНедели)
	Для НомерПары = 1 по 4 цикл						
		ДоступностьУчастников = 1;						
		ДоступностьУчастников = ПроверитьДоступность(ДатаЗанятия,НомерПары,Выборка.УчебнаяГруппа.Наименование,Выборка.Преподаватель);
		Если ДоступностьУчастников = 1 тогда
			СписокАудиторий = Выборка.Дисциплина.ПодходящиеАудитории;
			Аудитория = ВыбратьАудиторию(СписокАудиторий,ДатаЗанятия,НомерПары);
			Если Аудитория <>0 тогда
				Возврат РазместитьЗанятие(ДатаЗанятия,НомерДняНедели,НомерПары,Выборка,Аудитория);
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецФункции

//ВыборДаты
&НаСервере
Процедура ВыбратьДату(ГСЧ,Выборка,ПервыйДень,ПоследнийДень)			
	КоличествоДней = (ПоследнийДень - ПервыйДень) / 86400;
	РазмещениеЗанятия = 0;			
	Пока РазмещениеЗанятия = 0 цикл		
		СЧ = ГСЧ.СлучайноеЧисло(0,КоличествоДней);
		ДатаЗанятия = НачалоДня(ПервыйДень) + СЧ * 86400;
		НомерДняНедели = ДеньНедели(ДатаЗанятия);
		Если НомерДняНедели<7 тогда
			 РазмещениеЗанятия = ВыбратьПару(Выборка,ДатаЗанятия,НомерДняНедели);					 
		КонецЕсли;			
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РаспределитьЗанятия(ГСЧ,Выборка,ПервыйДень,ПоследнийДень,Часов)
	Для СчётчикКоличестваЗанятий = 1 по Часов/2 цикл
			ВыбратьДату(ГСЧ,Выборка,ПервыйДень,ПоследнийДень);			      			
	КонецЦикла;
КонецПроцедуры

//Начисление штрафа
Функция НачислитьШтраф(Дата,Пара,Группа)
	Перерыв = 1;
	Для каждого ТекСтрока из Объект.Авторасписание цикл
		Если (ТекСтрока.Дата = Дата) и (ТекСтрока.НомерПары = Пара) тогда
			Если (ТекСтрока.УчебнаяГруппа.Наименование = Группа) тогда
				Перерыв = 0;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Перерыв;
КонецФункции

//заполнение окна
Процедура ЗаполнитьОкно(ТекущаяДата,Пара,Группа,ПервыйДень,ПоследнийДень)
	ПараДонор = 4;
	Пока ПараДонор > Пара цикл
		Размещено = 0;
		Для каждого Занятие из Объект.Авторасписание цикл
			Если (Занятие.Дата > ПервыйДень) и Занятие.Дата < ПоследнийДень тогда
				Если (Занятие.НомерПары = ПараДонор) и (Занятие.УчебнаяГруппа.Наименование = Группа) тогда
					Доступность = ПроверитьДоступность(ТекущаяДата,Пара,Группа,Занятие.Преподаватель.Наименование);
					Если Доступность = 1 тогда
						СписокАудиторий = Занятие.Дисциплина.ПодходящиеАудитории;
						Аудитория = ВыбратьАудиторию(СписокАудиторий,ТекущаяДата,Пара);
						Если Аудитория <>0 тогда
							Сообщить (Строка(Занятие.Дата) + Занятие.НомерПары + ">" + Строка(ТекущаяДата) + Пара);
							Занятие.Дата = ТекущаяДата;
							Занятие.ДеньНедели = ДеньНеделиПрописью(ДеньНедели(ТекущаяДата));
							Занятие.НомерПары = Пара;
							Занятие.Аудитория = Аудитория;
							Размещено = 1;
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если Размещено = 1 тогда
			Прервать;
		КонецЕсли;
		ПараДонор = ПараДонор - 1;
	КонецЦикла;
КонецПроцедуры

//Поиск окон
&НаСервере
Процедура НайтиОкна(Группа,ПервыйДень,ПоследнийДень)
	Для Пара = 1 по 3 цикл
		Штраф = 0;
		ТекущаяДата = ПервыйДень;
		Пока ТекущаяДата <= ПоследнийДень цикл
			Если ДеньНедели(ТекущаяДата) < 7 тогда
				Штраф = НачислитьШтраф(ТекущаяДата,Пара,Группа);
				Если Штраф>0 тогда
					ЗаполнитьОкно(ТекущаяДата,Пара,Группа,ПервыйДень,Последнийдень);
				КонецЕсли;
			КонецЕсли;
			ТекущаяДата = ТекущаяДата + 86400;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

//Оптимизация результата
&НаСервере
Процедура ОптимизироватьНаСервере()
	Группы = Справочники.УчебныеГруппы.Выбрать();
	Пока Группы.Следующий() цикл
		ПервыйДень1 = НачалоДня(Группы.ДатаНачалаПервогоПолугодия);
		ПоследнийДень1 = НачалоДня(Группы.ДатаОкончанияПервогоПолугодия);
		ПервыйДень2 = НачалоДня(Группы.ДатаНачалаВторогоПолугодия);
		ПоследнийДень2 = НачалоДня(Группы.ДатаОкончанияВторогоПолугодия);
		НайтиОкна(Группы.Наименование,ПервыйДень1,ПоследнийДень1);
		НайтиОкна(Группы.Наименование,ПервыйДень2,ПоследнийДень2);		
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура СформироватьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		 "ВЫБРАТЬ
	 	|	ФондУчебнойНагрузкиОстатки.УчебнаяГруппа КАК УчебнаяГруппа,
	 	|	ФондУчебнойНагрузкиОстатки.Дисциплина КАК Дисциплина,
	 	|	ФондУчебнойНагрузкиОстатки.Преподаватель КАК Преподаватель,
	 	|	ФондУчебнойНагрузкиОстатки.ВсегоЧасов1Остаток,
	 	|	ФондУчебнойНагрузкиОстатки.Деления1Остаток,
	 	|	ФондУчебнойНагрузкиОстатки.ВсегоЧасов2Остаток,
	 	|	ФондУчебнойНагрузкиОстатки.Деления2Остаток
	 	|ИЗ
	 	|	РегистрНакопления.ФондУчебнойНагрузки.Остатки КАК ФондУчебнойНагрузкиОстатки
	 	|
	 	|УПОРЯДОЧИТЬ ПО
	 	|	УчебнаяГруппа,
	 	|	Дисциплина,
	 	|	Преподаватель";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаИзРезультата = РезультатЗапроса.Выбрать();
	//Конец выборки данных из регистра накоплений

	//Создание генератора случаных чисел
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	//Выбор по очереди каждой записи из фонда учебной нагрузки
	Пока ВыборкаИзРезультата.Следующий() цикл		
		
		//Определение первого и последнего учебного дня в полугодии, и учебных часов в полугодии
		
		//Первое полугодие
		ПервыйДень1 = НачалоДня(ВыборкаИзРезультата.УчебнаяГруппа.ДатаНачалаПервогоПолугодия);
		ПоследнийДень1 = НачалоДня(ВыборкаИзРезультата.УчебнаяГруппа.ДатаОкончанияПервогоПолугодия);
		Часов1 = ВыборкаИзРезультата.ВсегоЧасов1Остаток;
		//Второе полугодие
		ПервыйДень2 = НачалоДня(ВыборкаИзРезультата.УчебнаяГруппа.ДатаНачалаВторогоПолугодия);
		ПоследнийДень2 = НачалоДня(ВыборкаИзРезультата.УчебнаяГруппа.ДатаОкончанияВторогоПолугодия);				
		Часов2 = ВыборкаИзРезультата.ВсегоЧасов2Остаток;
				
		//Разбитие указанной суммы часов на отдельные занятия и их обработка		
		//Сначала для первого полугодия затем для второго
		
		//Первое полугодие
		РаспределитьЗанятия(ГСЧ,ВыборкаИзРезультата,ПервыйДень1,ПоследнийДень1,Часов1);
		//Второеполугодие
		РаспределитьЗанятия(ГСЧ,ВыборкаИзРезультата,ПервыйДень2,ПоследнийДень2,Часов2);		
	КонецЦикла;
	
	//Оптимизация результата
	
	
//Конец формирования расписания
КонецПроцедуры

//Конец выполнения на сервере

//Передача выполнения на сервер
&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();	   			
КонецПроцедуры


&НаКлиенте
Процедура Оптимизировать(Команда)
	ОптимизироватьНаСервере();
КонецПроцедуры

